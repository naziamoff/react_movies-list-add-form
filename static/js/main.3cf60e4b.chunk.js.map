{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","imdbId","regex","NewMovie","addMovie","useState","setTitle","setDescription","setImdbUrl","setImgUrl","setImdbId","isTitleValid","setIsTitleValid","isImgValid","setIsImgValid","isUrlValid","setIsUrlValid","isIdValid","setIsIdValid","isMovieValid","setIsMovieValid","useEffect","handleSubmit","type","classnames","placeholder","value","required","onChange","movieTitle","target","trim","length","movieUrl","test","id","image","disabled","onClick","e","preventDefault","App","state","moviesFromServer","setState","concat","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3cf60e4b.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = Movie;\n\nexport const MovieCard: React.FC<Props> = ({\n  title, description, imgUrl, imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n","import { useEffect, useState } from 'react';\nimport classnames from 'classnames';\n\ntype Props = {\n  addMovie: (movie: Movie) => void;\n};\n\n// eslint-disable-next-line max-len\nconst regex = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/;\n\nexport const NewMovie: React.FC<Props> = ({ addMovie }) => {\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [imdbUrl, setImdbUrl] = useState('');\n  const [imgUrl, setImgUrl] = useState('');\n  const [imdbId, setImdbId] = useState('');\n\n  const [isTitleValid, setIsTitleValid] = useState<null | boolean>(null);\n  const [isImgValid, setIsImgValid] = useState<null | boolean>(null);\n  const [isUrlValid, setIsUrlValid] = useState<null | boolean>(null);\n  const [isIdValid, setIsIdValid] = useState<null | boolean>(null);\n  const [isMovieValid, setIsMovieValid] = useState(false);\n\n  const checkIsMovieValid = () => {\n    const movieIsValid = isTitleValid && isIdValid\n    && isImgValid && isUrlValid;\n\n    if (movieIsValid) {\n      setIsMovieValid(true);\n    } else {\n      setIsMovieValid(false);\n    }\n  };\n\n  useEffect(() => {\n    checkIsMovieValid();\n  }, [isTitleValid, isIdValid, isUrlValid, isImgValid]);\n\n  const checkId = (id: string) => {\n    setImdbId(id);\n\n    if (id.trim().length) {\n      setIsIdValid(true);\n    } else {\n      setIsIdValid(false);\n    }\n  };\n\n  const checkTitle = (movieTitle: string) => {\n    setTitle(movieTitle);\n\n    if (movieTitle.trim().length) {\n      setIsTitleValid(true);\n    } else {\n      setIsTitleValid(false);\n    }\n  };\n\n  const checkImgUrl = (image: string) => {\n    setImgUrl(image);\n\n    if (regex.test(image)) {\n      setIsImgValid(true);\n    } else {\n      setIsImgValid(false);\n    }\n  };\n\n  const checkMovieUrl = (movieUrl: string) => {\n    setImdbUrl(movieUrl);\n    if (regex.test(movieUrl)) {\n      setIsUrlValid(true);\n    } else {\n      setIsUrlValid(false);\n    }\n  };\n\n  const resetAll = () => {\n    setTitle('');\n    setDescription('');\n    setImdbUrl('');\n    setImgUrl('');\n    setImdbId('');\n    setIsMovieValid(false);\n    setIsTitleValid(null);\n    setIsIdValid(null);\n    setIsImgValid(null);\n    setIsUrlValid(null);\n  };\n\n  const handleSubmit = () => {\n    if (isMovieValid) {\n      addMovie({\n        title, description, imdbUrl, imgUrl, imdbId,\n      });\n      resetAll();\n    }\n  };\n\n  return (\n    <form className=\"form\">\n      <div className=\"field\">\n        <input\n          type=\"text\"\n          className={classnames('input', {\n            'is-success': isTitleValid,\n            'is-danger': !isTitleValid && isTitleValid !== null,\n          })}\n          data-cy=\"form-title\"\n          placeholder=\"Movie title\"\n          value={title}\n          required\n          onChange={({ target }) => {\n            checkTitle(target.value);\n          }}\n        />\n      </div>\n      <div className=\"field\">\n        <input\n          type=\"text\"\n          className={classnames('input', {\n            'is-success': description.length,\n          })}\n          data-cy=\"form-description\"\n          placeholder=\"Description\"\n          value={description}\n          onChange={({ target }) => setDescription(target.value)}\n        />\n      </div>\n      <div className=\"field\">\n        <input\n          type=\"text\"\n          className={classnames('input', {\n            'is-success': isUrlValid === true,\n            'is-danger': imdbUrl.length && !isUrlValid,\n          })}\n          data-cy=\"form-imdbUrl\"\n          placeholder=\"URL\"\n          value={imdbUrl}\n          required\n          onChange={({ target }) => {\n            checkMovieUrl(target.value);\n          }}\n        />\n      </div>\n      <div className=\"field\">\n        <input\n          type=\"text\"\n          className={classnames('input', {\n            'is-success': isIdValid,\n            'is-danger': !isIdValid && isIdValid !== null,\n          })}\n          data-cy=\"form-imdbId\"\n          placeholder=\"Id\"\n          value={imdbId}\n          required\n          onChange={({ target }) => checkId(target.value)}\n        />\n      </div>\n      <div className=\"field\">\n        <input\n          type=\"text\"\n          className={classnames('input', {\n            'is-success': isImgValid === true,\n            'is-danger': isImgValid === false,\n          })}\n          data-cy=\"form-imgUrl\"\n          placeholder=\"Movie image\"\n          value={imgUrl}\n          required\n          onChange={({ target }) => {\n            checkImgUrl(target.value);\n          }}\n        />\n      </div>\n      <button\n        type=\"submit\"\n        disabled={!isMovieValid}\n        className=\"button is-success\"\n        data-cy=\"form-submit-button\"\n        onClick={(e) => {\n          e.preventDefault();\n          handleSubmit();\n        }}\n      >\n        Add movie\n      </button>\n    </form>\n  );\n};\n","import React from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\ninterface State {\n  movies: Movie[];\n}\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie: Movie) => {\n    this.setState((state) => ({ movies: state.movies.concat(movie) }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie addMovie={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}